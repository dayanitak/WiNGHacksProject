[gd_scene load_steps=15 format=3 uid="uid://mu627dd6kg4x"]

[ext_resource type="Texture2D" uid="uid://j8gw8mdssksv" path="res://Assets/Nova Sprite Sheet.png" id="1_10ak8"]

[sub_resource type="GDScript" id="GDScript_tvj1x"]
script/source = "extends CharacterBody2D


const SPEED = 300.0
const JUMP_VELOCITY = -400.0

var rey_in_range = false


# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = ProjectSettings.get_setting(\"physics/2d/default_gravity\")


func _physics_process(delta):
	
	if rey_in_range == true:
		if Input.is_action_just_pressed(\"ui_accept\"):
			DialogueManager.show_dialogue_balloon(load(\"res://Dialogue.gd\"), \"main\")
			return
	# Add the gravity.
	if not is_on_floor():
		velocity.y += gravity * delta

	# Handle jump.
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var direction = Input.get_axis(\"ui_left\", \"ui_right\")
	if direction:
		velocity.x = direction * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)

	move_and_slide()


func _on_detection_area_body_entered(body):
	if body.has_method(\"rey\"):
		rey_in_range = true


func _on_detection_area_body_exited(body):
	if body.has_method(\"rey\"):
		rey_in_range = false
"

[sub_resource type="AtlasTexture" id="AtlasTexture_4jbte"]
atlas = ExtResource("1_10ak8")
region = Rect2(256, 704, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_qc4oh"]
atlas = ExtResource("1_10ak8")
region = Rect2(320, 704, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_fvrvu"]
atlas = ExtResource("1_10ak8")
region = Rect2(384, 704, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_uvepm"]
atlas = ExtResource("1_10ak8")
region = Rect2(448, 704, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_6nys8"]
atlas = ExtResource("1_10ak8")
region = Rect2(512, 704, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_m1csl"]
atlas = ExtResource("1_10ak8")
region = Rect2(192, 704, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_phw72"]
atlas = ExtResource("1_10ak8")
region = Rect2(128, 704, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_bcnpe"]
atlas = ExtResource("1_10ak8")
region = Rect2(64, 704, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_vnjtd"]
atlas = ExtResource("1_10ak8")
region = Rect2(0, 704, 64, 64)

[sub_resource type="SpriteFrames" id="SpriteFrames_t7dee"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_4jbte")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_qc4oh")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_fvrvu")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_uvepm")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_6nys8")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_m1csl")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_phw72")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_bcnpe")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_vnjtd")
}],
"loop": true,
"name": &"default",
"speed": 5.0
}]

[sub_resource type="CircleShape2D" id="CircleShape2D_qtvxf"]
radius = 17.1172

[sub_resource type="CircleShape2D" id="CircleShape2D_rff7v"]
radius = 22.561

[node name="Node2D" type="CharacterBody2D"]
script = SubResource("GDScript_tvj1x")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
texture_filter = 1
sprite_frames = SubResource("SpriteFrames_t7dee")
autoplay = "default"

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(0, 11)
shape = SubResource("CircleShape2D_qtvxf")

[node name="Camera2D" type="Camera2D" parent="."]
zoom = Vector2(4, 4)

[node name="Detection_area" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Detection_area"]
position = Vector2(0, 10)
shape = SubResource("CircleShape2D_rff7v")

[connection signal="body_entered" from="Detection_area" to="." method="_on_detection_area_body_entered"]
[connection signal="body_exited" from="Detection_area" to="." method="_on_detection_area_body_exited"]
